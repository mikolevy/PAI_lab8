//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Client.ServerSessionFasadeNamespace {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AbonentData", Namespace="http://schemas.datacontract.org/2004/07/Server.DataModel")]
    [System.SerializableAttribute()]
    public partial class AbonentData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Client.ServerSessionFasadeNamespace.PhoneOperatorData PhoneOperatorDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneNumber {
            get {
                return this.PhoneNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneNumberField, value) != true)) {
                    this.PhoneNumberField = value;
                    this.RaisePropertyChanged("PhoneNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Client.ServerSessionFasadeNamespace.PhoneOperatorData PhoneOperatorData {
            get {
                return this.PhoneOperatorDataField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneOperatorDataField, value) != true)) {
                    this.PhoneOperatorDataField = value;
                    this.RaisePropertyChanged("PhoneOperatorData");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PhoneOperatorData", Namespace="http://schemas.datacontract.org/2004/07/OperatorService.Model")]
    [System.SerializableAttribute()]
    public partial class PhoneOperatorData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SymbolField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Symbol {
            get {
                return this.SymbolField;
            }
            set {
                if ((object.ReferenceEquals(this.SymbolField, value) != true)) {
                    this.SymbolField = value;
                    this.RaisePropertyChanged("Symbol");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServerSessionFasadeNamespace.ISessionFasade")]
    public interface ISessionFasade {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISessionFasade/GetAbonentsData", ReplyAction="http://tempuri.org/ISessionFasade/GetAbonentsDataResponse")]
        Client.ServerSessionFasadeNamespace.AbonentData[] GetAbonentsData();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISessionFasade/GetAbonentsData", ReplyAction="http://tempuri.org/ISessionFasade/GetAbonentsDataResponse")]
        System.IAsyncResult BeginGetAbonentsData(System.AsyncCallback callback, object asyncState);
        
        Client.ServerSessionFasadeNamespace.AbonentData[] EndGetAbonentsData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISessionFasade/IncreaseSaldo", ReplyAction="http://tempuri.org/ISessionFasade/IncreaseSaldoResponse")]
        void IncreaseSaldo();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISessionFasade/IncreaseSaldo", ReplyAction="http://tempuri.org/ISessionFasade/IncreaseSaldoResponse")]
        System.IAsyncResult BeginIncreaseSaldo(System.AsyncCallback callback, object asyncState);
        
        void EndIncreaseSaldo(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISessionFasadeChannel : Client.ServerSessionFasadeNamespace.ISessionFasade, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAbonentsDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAbonentsDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Client.ServerSessionFasadeNamespace.AbonentData[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Client.ServerSessionFasadeNamespace.AbonentData[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SessionFasadeClient : System.ServiceModel.ClientBase<Client.ServerSessionFasadeNamespace.ISessionFasade>, Client.ServerSessionFasadeNamespace.ISessionFasade {
        
        private BeginOperationDelegate onBeginGetAbonentsDataDelegate;
        
        private EndOperationDelegate onEndGetAbonentsDataDelegate;
        
        private System.Threading.SendOrPostCallback onGetAbonentsDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginIncreaseSaldoDelegate;
        
        private EndOperationDelegate onEndIncreaseSaldoDelegate;
        
        private System.Threading.SendOrPostCallback onIncreaseSaldoCompletedDelegate;
        
        public SessionFasadeClient() {
        }
        
        public SessionFasadeClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SessionFasadeClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SessionFasadeClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SessionFasadeClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<GetAbonentsDataCompletedEventArgs> GetAbonentsDataCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> IncreaseSaldoCompleted;
        
        public Client.ServerSessionFasadeNamespace.AbonentData[] GetAbonentsData() {
            return base.Channel.GetAbonentsData();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAbonentsData(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAbonentsData(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Client.ServerSessionFasadeNamespace.AbonentData[] EndGetAbonentsData(System.IAsyncResult result) {
            return base.Channel.EndGetAbonentsData(result);
        }
        
        private System.IAsyncResult OnBeginGetAbonentsData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetAbonentsData(callback, asyncState);
        }
        
        private object[] OnEndGetAbonentsData(System.IAsyncResult result) {
            Client.ServerSessionFasadeNamespace.AbonentData[] retVal = this.EndGetAbonentsData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAbonentsDataCompleted(object state) {
            if ((this.GetAbonentsDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAbonentsDataCompleted(this, new GetAbonentsDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAbonentsDataAsync() {
            this.GetAbonentsDataAsync(null);
        }
        
        public void GetAbonentsDataAsync(object userState) {
            if ((this.onBeginGetAbonentsDataDelegate == null)) {
                this.onBeginGetAbonentsDataDelegate = new BeginOperationDelegate(this.OnBeginGetAbonentsData);
            }
            if ((this.onEndGetAbonentsDataDelegate == null)) {
                this.onEndGetAbonentsDataDelegate = new EndOperationDelegate(this.OnEndGetAbonentsData);
            }
            if ((this.onGetAbonentsDataCompletedDelegate == null)) {
                this.onGetAbonentsDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAbonentsDataCompleted);
            }
            base.InvokeAsync(this.onBeginGetAbonentsDataDelegate, null, this.onEndGetAbonentsDataDelegate, this.onGetAbonentsDataCompletedDelegate, userState);
        }
        
        public void IncreaseSaldo() {
            base.Channel.IncreaseSaldo();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginIncreaseSaldo(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginIncreaseSaldo(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndIncreaseSaldo(System.IAsyncResult result) {
            base.Channel.EndIncreaseSaldo(result);
        }
        
        private System.IAsyncResult OnBeginIncreaseSaldo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginIncreaseSaldo(callback, asyncState);
        }
        
        private object[] OnEndIncreaseSaldo(System.IAsyncResult result) {
            this.EndIncreaseSaldo(result);
            return null;
        }
        
        private void OnIncreaseSaldoCompleted(object state) {
            if ((this.IncreaseSaldoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.IncreaseSaldoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void IncreaseSaldoAsync() {
            this.IncreaseSaldoAsync(null);
        }
        
        public void IncreaseSaldoAsync(object userState) {
            if ((this.onBeginIncreaseSaldoDelegate == null)) {
                this.onBeginIncreaseSaldoDelegate = new BeginOperationDelegate(this.OnBeginIncreaseSaldo);
            }
            if ((this.onEndIncreaseSaldoDelegate == null)) {
                this.onEndIncreaseSaldoDelegate = new EndOperationDelegate(this.OnEndIncreaseSaldo);
            }
            if ((this.onIncreaseSaldoCompletedDelegate == null)) {
                this.onIncreaseSaldoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnIncreaseSaldoCompleted);
            }
            base.InvokeAsync(this.onBeginIncreaseSaldoDelegate, null, this.onEndIncreaseSaldoDelegate, this.onIncreaseSaldoCompletedDelegate, userState);
        }
    }
}
